services:
  auth_postgres:
    command: postgres -c stats_temp_directory=/tmp
    container_name: auth_postgres
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_PORT: ${AUTH_POSTGRES_PORT}
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
    image: postgres:14.5-alpine
    networks:
      - frg-network
    ports:
      - "${AUTH_POSTGRES_PORT}:${AUTH_POSTGRES_PORT}"
    restart: unless-stopped
    volumes:
      - ../data/auth_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'curl --fail ${AUTH_POSTGRES_HEALTHCHECK_URL}|| exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  auth_keycloak:
    container_name: auth_keycloak
    depends_on:
      - auth_postgres
    ports:
      - ${AUTH_KEYCLOAK_HOSTNAME_PORT}:${AUTH_KEYCLOAK_HOSTNAME_PORT}
      # - 8443:8443
    healthcheck:
      test: ['CMD-SHELL', 'curl --fail ${AUTH_KEYCLOAK_HEALTHCHECK_URL}|| exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      DB_VENDOR: postgres
      DB_ADDR: auth_postgres
      DB_DATABASE: ${AUTH_POSTGRES_DB}
      DB_USER: ${AUTH_POSTGRES_USER}
      DB_PASSWORD: ${AUTH_POSTGRES_PASS}
      KEYCLOAK_ADMIN: ${AUTH_KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${AUTH_KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_HOSTNAME: localhost
      KC_HTTP_PORT: ${AUTH_KEYCLOAK_HOSTNAME_PORT}
    image: quay.io/keycloak/keycloak:${AUTH_KEYCLOAK_VERSION}
    restart: unless-stopped
    command: ["start-dev"]
    networks:
      - frg-network

networks:
  frg-network:
    name: frg-network
    driver: bridge
